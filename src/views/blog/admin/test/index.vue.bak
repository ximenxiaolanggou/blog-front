<template>
  <!-- 指定一个容器 -->
  <div id="vditor"></div>
</template>
<script setup>
// 1.1 引入Vditor 构造函数
import Vditor from 'vditor'
// 1.2 引入样式
import 'vditor/dist/index.css';
import { ref, onMounted } from 'vue';
import {upload} from "@/api/blog/article";

// 2. 获取DOM引用
const vditor = ref()

const saveContent = () => {
  // 在这里可以添加保存文本的逻辑，例如发送保存请求到后端
  console.log('Save operation triggered!');
  console.log('Content:', content.value);
};

// 3. 在组件初始化时，就创建Vditor对象，并引用
onMounted(() => {
  vditor.value = new Vditor('vditor',{
    height: '90vh',
    width: '84vw',
    hotkey: {
      save: 'Ctrl + S, Command + S', // 设置保存快捷键
    },
    upload: {
      accept: 'image/jpeg,image/png,image/gif,image/jpg,image/bmp', // 图片格式
      max: 2 * 1024 * 1024,  // 控制大小
      multiple: true, // 是否允许批量上传
      fieldName: 'file', // 上传字段名称
      // 文件名安全处理
      filename(name) {
        return name
            .replace(/[^(a-zA-Z0-9\u4e00-\u9fa5\.)]/g, '')
            .replace(/[\?\\/:|<>\*\[\]\(\)\$%\{\}@~]/g, '')
            .replace('/\\s/g', '');
      },
      // 遍历文件上传并展示
      async handler(files) {
        let res;
        for (const file of files) {
          const name = file.name;
          const formData = new FormData();
          formData.append('file', file);
          const res =await upload(formData)
          vditor.value.insertValue(`![${name}](${import.meta.env.VITE_APP_BASE_API + res.data})`); // 文本编辑器中插入图片
        }
        return '上传成功';
      },

    },
  })
  vditor.value.hotkey.save(() => {
    alert()
  })
})

</script>

<style scoped lang="scss">

</style>
